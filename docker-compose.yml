version: "3.3"
services:
  queue:
    image: rabbitmq:3
    # Using the below image instead is required to enable the "Broker" tab in the flower UI:
    # image: rabbitmq:3-management
    #
    # You also have to change the flower command
    volumes:
      - ./conf/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  flower:
    image: mher/flower:0.9.7
    networks:
      - default
    env_file:
      - .env
    command:
      - "--broker=amqp://guest@queue:5672//"
      # For the "Broker" tab to work in the flower UI, uncomment the following command argument,
      # and change the queue service's image as well
      # - "--broker_api=http://guest:guest@queue:15672/api//"
  backend:
    image: "${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}"
    networks:
      - default
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "3"
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      # - SMTP_HOST=${SMTP_HOST}
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        BACKEND_APP_MODULE: ${BACKEND_APP_MODULE-app.main:app}
        BACKEND_PRE_START_PATH: ${BACKEND_PRE_START_PATH-/app/prestart.sh}
        BACKEND_PROCESS_MANAGER: ${BACKEND_PROCESS_MANAGER-gunicorn}
        BACKEND_WITH_RELOAD: ${BACKEND_WITH_RELOAD-true}
        INSTALL_DEV: ${INSTALL_DEV-false}
    ports:
      - "80:80"  # Map container port 8000 to host port 8000

  celeryworker:
    image: "${DOCKER_IMAGE_CELERYWORKER?Variable not set}:${TAG-latest}"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "3"
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST?Variable not set}
    build:
      context: ./backend
      dockerfile: celeryworker.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}

  mongodb:
    image: mongo
    ports:
      - 27017:27017

volumes:
  app-db-data:
